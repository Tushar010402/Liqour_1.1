# Production Docker Compose - Optimized for production deployment
services:
  # Production Database Services
  postgres:
    image: postgres:15-alpine
    container_name: liquorpro-prod-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: liquorpro
      POSTGRES_USER: ${DB_USER:-liquorpro_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_MULTIPLE_EXTENSIONS: uuid-ossp,pg_trgm
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./backups:/backups
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-liquorpro_user}"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: liquorpro-prod-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "3"

  # Production Backend Services
  gateway:
    image: liquorpro/gateway:${VERSION:-latest}
    container_name: liquorpro-prod-gateway
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - APP_ENVIRONMENT=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8090
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_USER:-liquorpro_user}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=liquorpro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SERVICES_AUTH_URL=http://auth:8091
      - SERVICES_SALES_URL=http://sales:8092
      - SERVICES_INVENTORY_URL=http://inventory:8093
      - SERVICES_FINANCE_URL=http://finance:8094
      - SERVICES_FRONTEND_URL=http://frontend:8095
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/gateway/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"

  auth:
    image: liquorpro/auth:${VERSION:-latest}
    container_name: liquorpro-prod-auth
    restart: unless-stopped
    ports:
      - "8091:8091"
    environment:
      - APP_ENVIRONMENT=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8091
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_USER:-liquorpro_user}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=liquorpro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"

  sales:
    image: liquorpro/sales:${VERSION:-latest}
    container_name: liquorpro-prod-sales
    restart: unless-stopped
    ports:
      - "8092:8092"
    environment:
      - APP_ENVIRONMENT=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8092
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_USER:-liquorpro_user}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=liquorpro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"

  inventory:
    image: liquorpro/inventory:${VERSION:-latest}
    container_name: liquorpro-prod-inventory
    restart: unless-stopped
    ports:
      - "8093:8093"
    environment:
      - APP_ENVIRONMENT=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8093
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_USER:-liquorpro_user}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=liquorpro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8093/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"

  finance:
    image: liquorpro/finance:${VERSION:-latest}
    container_name: liquorpro-prod-finance
    restart: unless-stopped
    ports:
      - "8094:8094"
    environment:
      - APP_ENVIRONMENT=production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8094
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_USER:-liquorpro_user}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=liquorpro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8094/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"

  # Reverse Proxy / Load Balancer
  nginx:
    image: nginx:alpine
    container_name: liquorpro-prod-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - gateway
    networks:
      - liquorpro-prod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  liquorpro-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16